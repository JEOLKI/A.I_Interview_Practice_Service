<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiinterview.script.dao.ScriptTestMapper">
	
	<insert id="create">
		<selectKey keyProperty="scriptTestSq" resultType="String" order="BEFORE" keyColumn="scriptTestSq">
			SELECT script_test_sq.nextval FROM DUAL
		</selectKey>
			INSERT INTO script_test
			VALUES (TO_NUMBER(#{scriptTestSq}), #{scriptTestScore}, #{performScript}, sysdate, #{memId}, #{scriptSq}) 
	</insert>
	
	<select id="retrieveList" resultType="com.aiinterview.script.vo.ScriptTestVO">
		SELECT *
		FROM SCRIPT_TEST A, SCRIPT B, SCRIPT_GB C
		WHERE A.MEM_ID = #{memId}
		AND A.SCRIPT_SQ = B.SCRIPT_SQ 
		AND B.SCRIPT_GB_SQ = C.SCRIPT_GB_SQ
		AND ROWNUM <![CDATA[ < ]]> 11
		ORDER BY SCRIPT_TEST_SQ DESC
	</select>
	
	<select id="retrieveScore" parameterType="hashmap"  resultType="int">
		SELECT UTL_MATCH.EDIT_DISTANCE_SIMILARITY(#{scriptContent}, #{resultScript}) AS scriptTestScore
		  FROM DUAL
	</select>
	
	
	<!-- 통계: 스크립트 이용 빈도 : 순위, 스시, 스크립트문, totCnt-->
	<select id="retrieveRankingList" parameterType="hashmap" resultType="com.aiinterview.script.vo.ScriptTestVO">
		SELECT  DENSE_RANK() OVER (ORDER BY totCnt DESC) as rank, c.*
		FROM   (SELECT   round(avg(a.script_test_score), 2) as avgScore, count(*) as totCnt, a.script_sq, b.script_content, b.script_gb_sq, a.script_test_date
		         FROM    script_test a, script b
		         WHERE   a.script_sq = b.script_sq
		         AND     b.script_gb_sq = #{scriptGbSq}
		         AND     a.script_test_date BETWEEN #{startDate} AND #{endDate}
		         GROUP BY a.script_sq, b.script_content, b.script_gb_sq, a.script_test_date) c
		GROUP BY c.avgScore, c.totCnt, c.script_sq, c.script_content, c.script_gb_sq, c.script_test_date
	</select>

	<!-- 통계 : 스크립트 구분 별 점수 분포도 -->
	<select id="retrieveScoreList" parameterType="hashmap"  resultType="com.aiinterview.script.vo.ScriptTestVO">
		SELECT c.script_test_score, c.script_sq, c.script_test_date, count(c.scoreCnt) as totCnt
		FROM   (SELECT      (CASE 
		                    WHEN a.script_test_score=0 THEN 0
		                    <![CDATA[
		                    WHEN a.script_test_score>=1 AND a.script_test_score<=9 THEN 1
		                    WHEN a.script_test_score>=10 AND a.script_test_score<=19 THEN 10
		                    WHEN a.script_test_score>=20 AND a.script_test_score<=29 THEN 20
		                    WHEN a.script_test_score>=30 AND a.script_test_score<=39 THEN 30
		                    WHEN a.script_test_score>=40 AND a.script_test_score<=49 THEN 40
		                    WHEN a.script_test_score>=50 AND a.script_test_score<=59 THEN 50
		                    WHEN a.script_test_score>=60 AND a.script_test_score<=69 THEN 60
		                    WHEN a.script_test_score>=70 AND a.script_test_score<=79 THEN 70
		                    WHEN a.script_test_score>=80 AND a.script_test_score<=89 THEN 80
		                    WHEN a.script_test_score>=90 AND a.script_test_score<=99 THEN 90
		                    ]]>
		                    WHEN a.script_test_score=100 THEN 100 END) AS script_test_score, a.script_sq, b.script_content, b.script_gb_sq, a.script_test_date, count(*) as scoreCnt
		        FROM        script_test a, script b
		        WHERE       a.script_sq = b.script_sq
		        AND         b.script_gb_sq = #{scriptGbSq}
		        AND         a.script_test_date BETWEEN #{startDate} AND #{endDate}
		        GROUP BY    a.script_test_sq, a.script_test_score, a.script_sq, b.script_content, b.script_gb_sq, a.script_test_date) c
		GROUP BY    c.script_test_score, c.script_sq, c.script_content, c.script_test_date, c.scoreCnt
		ORDER BY    c.script_test_score ASC, c.script_test_date DESC
	</select>
	
	<!-- 통계 : 스크립트 구분 별 점수 분포도 -->
<!-- 	<select id="retrieveScoreList" parameterType="hashmap"  resultType="com.aiinterview.script.vo.ScriptTestVO"> -->
<!-- 		SELECT  c.script_test_score, c.script_sq, c.script_test_date, count(c.scoreCnt) as totCnt -->
<!-- 		FROM   (SELECT     a.script_test_sq, a.script_test_score, a.script_sq, b.script_content, b.script_gb_sq, a.script_test_date, count(*) as scoreCnt -->
<!-- 		        FROM        script_test a, script b -->
<!-- 		        WHERE       a.script_sq = b.script_sq -->
<!-- 		        AND         b.script_gb_sq = #{scriptGbSq} -->
<!-- 		        AND         a.script_test_date BETWEEN #{startDate} AND #{endDate} -->
<!-- 		        GROUP BY    a.script_test_sq, a.script_test_score, a.script_sq, b.script_content, b.script_gb_sq, a.script_test_date) c -->
<!-- 		GROUP BY    c.script_test_score, c.script_sq, c.script_content, c.script_test_date, c.scoreCnt -->
<!-- 		ORDER BY    c.script_test_score DESC, c.script_test_date DESC -->
<!-- 	</select> -->


	
<!-- 	<select id="retrieveScoreList" parameterType="String"  resultType="com.aiinterview.script.vo.ScriptTestVO"> -->
<!-- 		SELECT 	a.script_test_sq, a.script_test_score, a.script_sq, b.script_content, b.script_gb_sq, a.script_test_date -->
<!-- 		FROM    script_test a, script b -->
<!-- 		WHERE   a.script_sq = b.script_sq -->
<!-- 		AND     b.script_gb_sq = #{scriptGbSq} -->
<!-- 	</select> -->
	
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  

<mapper namespace="com.aiinterview.chat.dao.ChatMapper">

	<select id="retrieveList" parameterType="com.aiinterview.chat.vo.ChatVO" resultType="com.aiinterview.chat.vo.ChatVO">
	select * from(
	select MSG_SQ, MSG_CONTENT, 
	<![CDATA[
        CASE WHEN TO_CHAR(SYSDATE-1, 'YYYY/MM/DD') < TO_CHAR(MSG_DATE, 'YYYY/MM/DD') THEN TO_CHAR(MSG_DATE,'AM HH:MI')
            ELSE TO_CHAR(MSG_DATE,'YYYY/MM/DD') END AS MSG_DATE,
             ]]>
        MSG_SENDER, MSG_RECEIVER from message
	where msg_sender = #{msgSender} and msg_receiver = #{msgReceiver}
	union
	select MSG_SQ, MSG_CONTENT,
	<![CDATA[ 
        CASE WHEN TO_CHAR(SYSDATE-1, 'YYYY/MM/DD') < TO_CHAR(MSG_DATE, 'YYYY/MM/DD') THEN TO_CHAR(MSG_DATE,'AM HH:MI')
            ELSE TO_CHAR(MSG_DATE,'YYYY/MM/DD') END AS MSG_DATE,
    ]]>       
        MSG_SENDER, MSG_RECEIVER from message
	where msg_sender = #{msgReceiver} and msg_receiver = #{msgSender})
	
	</select>
	
	<insert id="create" parameterType="com.aiinterview.chat.vo.ChatVO" >
		INSERT INTO MESSAGE(MSG_SQ, MSG_CONTENT, MSG_DATE, MSG_SENDER, MSG_RECEIVER, MSG_ALARM)
		 VALUES(message_sq.nextval,#{msgContent},SYSDATE, #{msgSender}, #{msgReceiver}, #{msgAlarm})
	</insert>
	
	<update id="alarmUpdate" parameterType="com.aiinterview.chat.vo.ChatVO">
		update message set msg_alarm = 'Y'
		where msg_sender = #{msgSender }
		and msg_Receiver = #{msgReceiver}
		and msg_alarm = 'N'
	</update>
	
	<select id="alarmCount" parameterType="String" resultType="String">
		select count(*) from message
		where msg_alarm = 'N'
		and msg_receiver = #{memId}
	</select>
	
	
	<select id="retrieveRoomList" resultType="com.aiinterview.chat.vo.ChatRoomVO" >

	SELECT A.MEM_ID, A.MSG_CONTENT, SUBSTR(A.MSG_DATE, 1, 20)MSG_DATE
,  A.MEM_PROFILE_NM,
	A.MEM_PROFILE_PATH, NVL(B.MSG_ALARM,0) AS MSG_ALARM
	FROM
	(SELECT
	A.MSG_SENDER AS MEM_ID , A.MSG_CONTENT, TO_CHAR(A.Msg_Date, 'YYYY-MM-DD
	AM HH:MI:SS')MSG_DATE, B.MEM_PROFILE_NM, B.MEM_PROFILE_PATH
	FROM
	(SELECT A.MSG_SQ, A.MSG_SENDER, B.MSG_CONTENT, B.Msg_Date
	FROM
	(SELECT MAX(A.MSG_SQ)MSG_SQ, A.MSG_SENDER
	FROM(
	SELECT MAX(A.MSG_SQ)MSG_SQ, A.MSG_SENDER
	FROM MESSAGE A, (SELECT * FROM MEMBER where mem_auth = 'C')B
	WHERE A.MSG_SENDER NOT IN(B.MEM_ID)
	GROUP BY A.MSG_SENDER
	union
	SELECT MAX(A.MSG_SQ)MSG_SQ, A.MSG_RECEIVER AS MSG_SENDER
	FROM MESSAGE A, (SELECT * FROM MEMBER where mem_auth = 'C')B
	WHERE A.MSG_RECEIVER NOT IN(B.MEM_ID)
	GROUP BY A.MSG_RECEIVER )A
	GROUP BY A.MSG_SENDER)A, MESSAGE B
	WHERE A.MSG_SQ = B.MSG_SQ)A, MEMBER B
	WHERE A.MSG_SENDER = B.MEM_ID)A LEFT OUTER JOIN (select count(MSG_ALARM)
	MSG_ALARM, MSG_SENDER from message
	where MSG_ALARM = 'N'
	group by msg_sender)B ON A.MEM_ID = B.MSG_SENDER
	ORDER BY A.MSG_DATE DESC 
		
	</select>
	
	<select id="searchManager" resultType="com.aiinterview.member.vo.MemberVO">
		select * from member
     	where mem_auth = 'C'
	</select>

</mapper>




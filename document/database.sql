
-- TABLE DROP

DROP TABLE "MEMBER" CASCADE CONSTRAINTS;
DROP TABLE "SCRIPT_GB" CASCADE CONSTRAINTS;
DROP TABLE "CATEGORY" CASCADE CONSTRAINTS;
DROP TABLE "CATEGORY_GB" CASCADE CONSTRAINTS;
DROP TABLE "SCRIPT" CASCADE CONSTRAINTS;
DROP TABLE "BOARD_GB" CASCADE CONSTRAINTS;
DROP TABLE "SCRIPT_TEST" CASCADE CONSTRAINTS;
DROP TABLE "BOARD" CASCADE CONSTRAINTS;
DROP TABLE "SPEACH_TEST" CASCADE CONSTRAINTS;
DROP TABLE "SPEECH_TEST" CASCADE CONSTRAINTS;
DROP TABLE "REPLY" CASCADE CONSTRAINTS;
DROP TABLE "ATTACHMENT" CASCADE CONSTRAINTS;
DROP TABLE "PLAN" CASCADE CONSTRAINTS;
DROP TABLE "PLAN_USE" CASCADE CONSTRAINTS;
DROP TABLE "INTERVIEW" CASCADE CONSTRAINTS;
DROP TABLE "QUESTION" CASCADE CONSTRAINTS;
DROP TABLE "ANSWER" CASCADE CONSTRAINTS;
DROP TABLE "SAMPLE_QUESTION" CASCADE CONSTRAINTS;
DROP TABLE "QUESTION_GB" CASCADE CONSTRAINTS;
DROP TABLE "VOICE_ANALYSIS" CASCADE CONSTRAINTS;
DROP TABLE "HABIT_ANALYSIS" CASCADE CONSTRAINTS;
DROP TABLE "REPET_ANALYSIS" CASCADE CONSTRAINTS; -- 기존 테이블삭제용
DROP TABLE "REPEAT_ANALYSIS" CASCADE CONSTRAINTS;
DROP TABLE "TALENT" CASCADE CONSTRAINTS;
DROP TABLE "KEYWORD_MATCHING" CASCADE CONSTRAINTS;
DROP TABLE "KEYWORD" CASCADE CONSTRAINTS;
DROP TABLE "IMAGE_ANALYSIS" CASCADE CONSTRAINTS;
DROP TABLE "HABIT" CASCADE CONSTRAINTS;
DROP TABLE "KEYWORD_ANALYSIS" CASCADE CONSTRAINTS;
DROP TABLE "MESSAGE" CASCADE CONSTRAINTS;


/* MEMBER */
CREATE TABLE MEMBER (
	MEM_ID VARCHAR2(100) NOT NULL, /* MEM_ID */
	MEM_PW VARCHAR2(100), /* MEM_PW */
	MEM_AUTH CHAR(1), /* MEM_AUTH */
	MEM_ST CHAR(1), /* MEM_ST */
	MEM_ALIAS VARCHAR2(100), /* MEM_ALIAS */
	MEM_NM VARCHAR2(100), /* MEM_NM */
	MEM_TEL VARCHAR2(100), /* MEM_TEL */
	MEM_ADDR1 VARCHAR2(1000), /* MEM_ADDR1 */
	MEM_ADDR2 VARCHAR2(1000), /* MEM_ADDR2 */
	MEM_ZIPCODE NUMBER, /* MEM_ZIPCODE */
	MEM_CAREER VARCHAR2(100), /* MEM_CAREER */
	MEM_EDUC VARCHAR2(100), /* MEM_EDUC */
	MEM_GENDER CHAR(1), /* MEM_GENDER */
	MEM_TARGET_COMPANY VARCHAR2(100), /* MEM_TARGET_COMPANY */
	MEM_TARGET_JOB VARCHAR2(100), /* MEM_TARGET_JOB */
	SEARCH_JOB_DATE VARCHAR2(100), /* SEARCH_JOB_DATE */
	MEM_MAJOR VARCHAR2(100), /* MEM_MAJOR */
	MEM_PROFILE_NM VARCHAR2(4000), /* MEM_PROFILE_NM */
	MEM_PROFILE_PATH VARCHAR2(4000) /* MEM_PROFILE_PATH */
);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			MEM_ID
		);

/* SCRIPT_GB */
CREATE TABLE SCRIPT_GB (
	SCRIPT_GB_SQ NUMBER NOT NULL, /* SCRIPT_GB_SQ */
	SCRIPT_GB_CONTENT VARCHAR2(100), /* SCRIPT_GB_CONTENT */
	SCRIPT_GB_ST CHAR(1) /* SCRIPT_GB_ST */
);

ALTER TABLE SCRIPT_GB
	ADD
		CONSTRAINT PK_SCRIPT_GB
		PRIMARY KEY (
			SCRIPT_GB_SQ
		);

/* CATEGORY */
CREATE TABLE CATEGORY (
	CAT_SQ NUMBER NOT NULL, /* CAT_SQ */
	CAT_CONTENT VARCHAR2(1000), /* CAT_CONTENT */
	CAT_ST CHAR(1), /* CAT_ST */
	BOARD_GB_SQ NUMBER /* BOARD_GB_SQ */
);

ALTER TABLE CATEGORY
	ADD
		CONSTRAINT PK_CATEGORY
		PRIMARY KEY (
			CAT_SQ
		);

/* SCRIPT */
CREATE TABLE SCRIPT (
	SCRIPT_SQ NUMBER NOT NULL, /* SCRIPT_SQ */
	SCRIPT_CONTENT VARCHAR2(1000), /* SCRIPT_CONTENT */
	SCRIPT_ST CHAR(1), /* SCRIPT_ST */
	SCRIPT_GB_SQ NUMBER /* SCRIPT_GB_SQ */
);

ALTER TABLE SCRIPT
	ADD
		CONSTRAINT PK_SCRIPT
		PRIMARY KEY (
			SCRIPT_SQ
		);

/* BOARD_GB */
CREATE TABLE BOARD_GB (
	BOARD_GB_SQ NUMBER NOT NULL, /* BOARD_GB_SQ */
	BOARD_GB_NM VARCHAR2(1000), /* BOARD_GB_NM */
	BOARD_GB_ST CHAR(1) /* BOARD_GB_ST */
);

ALTER TABLE BOARD_GB
	ADD
		CONSTRAINT PK_BOARD_GB
		PRIMARY KEY (
			BOARD_GB_SQ
		);

/* SCRIPT_TEST */
CREATE TABLE SCRIPT_TEST (
	SCRIPT_TEST_SQ NUMBER NOT NULL, /* SCRIPT_TEST_SQ */
	SCRIPT_TEST_SCORE NUMBER, /* SCRIPT_TEST_SCORE */
	PERFORM_SCRIPT VARCHAR2(4000), /* PERFORM_SCRIPT */
	SCRIPT_TEST_DATE DATE, /* SCRIPT_TEST_DATE */
	MEM_ID VARCHAR2(100) NOT NULL, /* MEM_ID */
	SCRIPT_SQ NUMBER NOT NULL /* SCRIPT_SQ */
);

ALTER TABLE SCRIPT_TEST
	ADD
		CONSTRAINT PK_SCRIPT_TEST
		PRIMARY KEY (
			SCRIPT_TEST_SQ
		);

/* BOARD */
CREATE TABLE BOARD (
	BOARD_SQ NUMBER NOT NULL, /* BOARD_SQ */
	BOARD_GB_SQ NUMBER, /* BOARD_GB_SQ */
	CAT_CONTENT VARCHAR2(1000), /* CAT_CONTENT */
	BOARD_TITLE VARCHAR2(1000), /* BOARD_TITLE */
	BOARD_CONTENT CLOB, /* BOARD_CONTENT */
	BOARD_DATE DATE, /* BOARD_DATE */
	BOARD_ST CHAR(1), /* BOARD_ST */
	GROUP_NO NUMBER, /* GROUP_NO */
	PARENT_SQ NUMBER, /* PARENT_SQ */
	MEM_ID VARCHAR2(100) /* MEM_ID */
);

ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BOARD_SQ
		);

/* SPEECH_TEST */
CREATE TABLE SPEECH_TEST (
	SPEECH_TEST_SQ NUMBER NOT NULL, /* SPEECH_TEST_SQ */
	MEM_ID VARCHAR2(100), /* MEM_ID */
	SPEECH_TEST_SCORE NUMBER, /* SPEECH_TEST_SCORE */
	SPEECH_SCRIPT VARCHAR2(4000), /* SPEECH_SCRIPT */
	SPEECH_TEST_DATE DATE /* SPEECH_TEST_DATE */
);

ALTER TABLE SPEECH_TEST
	ADD
		CONSTRAINT PK_SPEECH_TEST
		PRIMARY KEY (
			SPEECH_TEST_SQ
		);

/* REPLY */
CREATE TABLE REPLY (
	REPLY_SQ NUMBER NOT NULL, /* REPLY_SQ */
	BOARD_SQ NUMBER, /* BOARD_SQ */
	REPLY_CONTENT VARCHAR2(4000), /* REPLY_CONTENT */
	REPLY_DATE DATE, /* REPLY_DATE */
	REPLY_ST CHAR(1), /* REPLY_ST */
	MEM_ID VARCHAR2(100) /* MEM_ID */
);

ALTER TABLE REPLY
	ADD
		CONSTRAINT PK_REPLY
		PRIMARY KEY (
			REPLY_SQ
		);

/* ATTACHMENT */
CREATE TABLE ATTACHMENT (
	ATCH_SQ NUMBER NOT NULL, /* ATCH_SQ */
	BOARD_SQ NUMBER, /* BOARD_SQ */
	ATCH_NM VARCHAR2(4000), /* ATCH_NM */
	ATCH_PATH VARCHAR2(4000) /* ATCH_PATH */
);

ALTER TABLE ATTACHMENT
	ADD
		CONSTRAINT PK_ATTACHMENT
		PRIMARY KEY (
			ATCH_SQ
		);

/* PLAN */
CREATE TABLE PLAN (
	PLAN_SQ NUMBER NOT NULL, /* PLAN_SQ */
	PLAN_NM VARCHAR2(100), /* PLAN_NM */
	PLAN_PRICE NUMBER, /* PLAN_PRICE */
	PLAN_EXPLAIN VARCHAR2(1000), /* PLAN_EXPLAIN */
	PLAN_ST CHAR(1), /* PLAN_ST */
	PLAN_PERIOD NUMBER /* PLAN_PERIOD */
);

ALTER TABLE PLAN
	ADD
		CONSTRAINT PK_PLAN
		PRIMARY KEY (
			PLAN_SQ
		);

/* PLAN_USE */
CREATE TABLE PLAN_USE (
	USE_SQ NUMBER NOT NULL, /* USE_SQ */
	START_DATE DATE, /* START_DATE */
	END_DATE DATE, /* END_DATE */
	MEM_ID VARCHAR2(100), /* MEM_ID */
	PLAN_SQ NUMBER /* PLAN_SQ */
);

ALTER TABLE PLAN_USE
	ADD
		CONSTRAINT PK_PLAN_USE
		PRIMARY KEY (
			USE_SQ
		);

/* INTERVIEW */
CREATE TABLE INTERVIEW (
	INTERVIEW_SQ NUMBER NOT NULL, /* INTERVIEW_SQ */
	INTERVIEW_NM VARCHAR2(1000), /* INTERVIEW_NM */
	INTERVIEW_DATE DATE, /* INTERVIEW_DATE */
	MEM_ID VARCHAR2(100) /* MEM_ID */
);

ALTER TABLE INTERVIEW
	ADD
		CONSTRAINT PK_INTERVIEW
		PRIMARY KEY (
			INTERVIEW_SQ
		);

/* QUESTION */
CREATE TABLE QUESTION (
	QUEST_SQ NUMBER NOT NULL, /* QUEST_SQ */
	QUEST_CONTENT VARCHAR2(4000), /* QUEST_CONTENT */
	INTERVIEW_SQ NUMBER, /* INTERVIEW_SQ */
	SAMP_QUEST_SQ NUMBER /* SAMP_QUEST_SQ */
);

ALTER TABLE QUESTION
	ADD
		CONSTRAINT PK_QUESTION
		PRIMARY KEY (
			QUEST_SQ
		);

/* ANSWER */
CREATE TABLE ANSWER (
	ANS_SQ NUMBER NOT NULL, /* ANS_SQ */
	ANS_CONTENT VARCHAR2(4000), /* ANS_CONTENT */
	VIDEO_PATH VARCHAR2(4000), /* VIDEO_PATH */
	ANS_TIME NUMBER, /* ANS_TIME */
	ANS_SPEED NUMBER, /* ANS_SPEED */
	QUEST_SQ NUMBER /* QUEST_SQ */
);

ALTER TABLE ANSWER
	ADD
		CONSTRAINT PK_ANSWER
		PRIMARY KEY (
			ANS_SQ
		);

/* SAMPLE_QUESTION */
CREATE TABLE SAMPLE_QUESTION (
	SAMP_QUEST_SQ NUMBER NOT NULL, /* SAMP_QUEST_SQ */
	SAMP_QUEST_CONTENT VARCHAR2(4000), /* SAMP_QUEST_CONTENT */
	SAMP_QUEST_ST CHAR(1), /* SAMP_QUEST_ST */
	QUEST_GB_SQ NUMBER /* QUEST_GB_SQ */
);

ALTER TABLE SAMPLE_QUESTION
	ADD
		CONSTRAINT PK_SAMPLE_QUESTION
		PRIMARY KEY (
			SAMP_QUEST_SQ
		);

/* QUESTION_GB */
CREATE TABLE QUESTION_GB (
	QUEST_GB_SQ NUMBER NOT NULL, /* QUEST_GB_SQ */
	QUEST_GB_CONTENT VARCHAR2(100), /* QUEST_GB_CONTENT */
	QUEST_GB_ST CHAR(1) /* QUEST_GB_ST */
);

ALTER TABLE QUESTION_GB
	ADD
		CONSTRAINT PK_QUESTION_GB
		PRIMARY KEY (
			QUEST_GB_SQ
		);

/* VOICE_ANALYSIS */
CREATE TABLE VOICE_ANALYSIS (
	VOICE_ANALYSIS_SQ NUMBER NOT NULL, /* VOICE_ANALYSIS_SQ */
	VOICE_DECIBEL NUMBER, /* VOICE_DECIBEL */
	VOICE_RANGE NUMBER, /* VOICE_RANGE */
	ANS_SQ NUMBER /* ANS_SQ */
);

ALTER TABLE VOICE_ANALYSIS
	ADD
		CONSTRAINT PK_VOICE_ANALYSIS
		PRIMARY KEY (
			VOICE_ANALYSIS_SQ
		);

/* HABIT_ANALYSIS */
CREATE TABLE HABIT_ANALYSIS (
	HABIT_SQ NUMBER NOT NULL, /* HABIT_SQ */
	ANS_SQ NUMBER NOT NULL, /* ANS_SQ */
	HABIT_COUNT NUMBER /* HABIT_COUNT */
);

ALTER TABLE HABIT_ANALYSIS
	ADD
		CONSTRAINT PK_HABIT_ANALYSIS
		PRIMARY KEY (
			HABIT_SQ,
			ANS_SQ
		);

/* REPEAT_ANALYSIS */
CREATE TABLE REPEAT_ANALYSIS (
	REPEAT_ANALYSIS_SQ NUMBER NOT NULL, /* REPEAT_ANALYSIS_SQ */
	REPEAT_COUNT NUMBER, /* REPEAT_COUNT */
	REPEAT_CONTENT VARCHAR2(100), /* REPEAT_CONTENT */
	ANS_SQ NUMBER /* ANS_SQ */
);

ALTER TABLE REPEAT_ANALYSIS
	ADD
		CONSTRAINT PK_REPEAT_ANALYSIS
		PRIMARY KEY (
			REPEAT_ANALYSIS_SQ
		);

/* TALENT */
CREATE TABLE TALENT (
	TALENT_SQ NUMBER NOT NULL, /* TALENT_SQ */
	TALENT_NM VARCHAR2(100), /* TALENT_NM */
	TALENT_ST CHAR(1) /* TALENT_ST */
);

ALTER TABLE TALENT
	ADD
		CONSTRAINT PK_TALENT
		PRIMARY KEY (
			TALENT_SQ
		);

/* KEYWORD_MATCHING */
CREATE TABLE KEYWORD_MATCHING (
	TALENT_SQ NUMBER NOT NULL, /* TALENT_SQ */
	KEYWORD_SQ NUMBER NOT NULL /* KEYWORD_SQ */
);

ALTER TABLE KEYWORD_MATCHING
	ADD
		CONSTRAINT PK_KEYWORD_MATCHING
		PRIMARY KEY (
			TALENT_SQ,
			KEYWORD_SQ
		);

/* KEYWORD */
CREATE TABLE KEYWORD (
	KEYWORD_SQ NUMBER NOT NULL, /* KEYWORD_SQ */
	KEYWORD_CONTENT VARCHAR2(100) /* KEYWORD_CONTENT */
);

ALTER TABLE KEYWORD
	ADD
		CONSTRAINT PK_KEYWORD
		PRIMARY KEY (
			KEYWORD_SQ
		);

/* IMAGE_ANALYSIS */
CREATE TABLE IMAGE_ANALYSIS (
	IMAGE_ANALYSIS_SQ NUMBER NOT NULL, /* IMAGE_ANALYSIS_SQ */
	ANGER NUMBER, /* ANGER */
	CONTEMPT NUMBER, /* CONTEMPT */
	FEAR NUMBER, /* FEAR */
	DISGUST NUMBER, /* DISGUST */
	HAPPINESS NUMBER, /* HAPPINESS */
	NEUTRAL NUMBER, /* NEUTRAL */
	SADNESS NUMBER, /* SADNESS */
	SURPRISE NUMBER, /* SURPRISE */
	FACE_TOP NUMBER, /* FACE_TOP */
	FACE_LEFT NUMBER, /* FACE_LEFT */
	FACE_WIDTH NUMBER, /* FACE_WIDTH */
	FACE_HEIGHT NUMBER, /* FACE_HEIGHT */
	ANS_SQ NUMBER /* ANS_SQ */
);

ALTER TABLE IMAGE_ANALYSIS
	ADD
		CONSTRAINT PK_IMAGE_ANALYSIS
		PRIMARY KEY (
			IMAGE_ANALYSIS_SQ
		);

/* HABIT */
CREATE TABLE HABIT (
	HABIT_SQ NUMBER NOT NULL, /* HABIT_SQ */
	HABIT_GB VARCHAR2(100), /* HABIT_GB */
	HABIT_ST CHAR(1) /* HABIT_ST */
);

ALTER TABLE HABIT
	ADD
		CONSTRAINT PK_HABIT
		PRIMARY KEY (
			HABIT_SQ
		);

/* KEYWORD_ANALYSIS */
CREATE TABLE KEYWORD_ANALYSIS (
	ANS_SQ NUMBER NOT NULL, /* ANS_SQ */
	TALENT_SQ NUMBER NOT NULL, /* TALENT_SQ */
	KEYWORD_SQ NUMBER NOT NULL, /* KEYWORD_SQ */
	KEYWORD_COUNT NUMBER /* KEYWORD_COUNT */
);

ALTER TABLE KEYWORD_ANALYSIS
	ADD
		CONSTRAINT PK_KEYWORD_ANALYSIS
		PRIMARY KEY (
			ANS_SQ,
			TALENT_SQ,
			KEYWORD_SQ
		);

/* MESSAGE */
CREATE TABLE MESSAGE (
	MSG_SQ NUMBER NOT NULL, /* MSG_SQ */
	MSG_CONTENT VARCHAR2(4000), /* MSG_CONTENT */
	MSG_DATE DATE, /* MSG_DATE */
	MSG_SENDER VARCHAR2(100), /* MSG_SENDER */
	MSG_RECEIVER VARCHAR2(100) /* MSG_RECEIVER */
);

ALTER TABLE MESSAGE
	ADD
		CONSTRAINT PK_MESSAGE
		PRIMARY KEY (
			MSG_SQ
		);

ALTER TABLE CATEGORY
	ADD
		CONSTRAINT FK_BOARD_GB_TO_CATEGORY
		FOREIGN KEY (
			BOARD_GB_SQ
		)
		REFERENCES BOARD_GB (
			BOARD_GB_SQ
		);

ALTER TABLE SCRIPT
	ADD
		CONSTRAINT FK_SCRIPT_GB_TO_SCRIPT
		FOREIGN KEY (
			SCRIPT_GB_SQ
		)
		REFERENCES SCRIPT_GB (
			SCRIPT_GB_SQ
		);

ALTER TABLE SCRIPT_TEST
	ADD
		CONSTRAINT FK_MEMBER_TO_SCRIPT_TEST
		FOREIGN KEY (
			MEM_ID
		)
		REFERENCES MEMBER (
			MEM_ID
		);

ALTER TABLE SCRIPT_TEST
	ADD
		CONSTRAINT FK_SCRIPT_TO_SCRIPT_TEST
		FOREIGN KEY (
			SCRIPT_SQ
		)
		REFERENCES SCRIPT (
			SCRIPT_SQ
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_BOARD_GB_TO_BOARD
		FOREIGN KEY (
			BOARD_GB_SQ
		)
		REFERENCES BOARD_GB (
			BOARD_GB_SQ
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_BOARD
		FOREIGN KEY (
			MEM_ID
		)
		REFERENCES MEMBER (
			MEM_ID
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_BOARD_TO_BOARD
		FOREIGN KEY (
			PARENT_SQ
		)
		REFERENCES BOARD (
			BOARD_SQ
		);

ALTER TABLE SPEECH_TEST
	ADD
		CONSTRAINT FK_MEMBER_TO_SPEECH_TEST
		FOREIGN KEY (
			MEM_ID
		)
		REFERENCES MEMBER (
			MEM_ID
		);

ALTER TABLE REPLY
	ADD
		CONSTRAINT FK_BOARD_TO_REPLY
		FOREIGN KEY (
			BOARD_SQ
		)
		REFERENCES BOARD (
			BOARD_SQ
		);

ALTER TABLE REPLY
	ADD
		CONSTRAINT FK_MEMBER_TO_REPLY
		FOREIGN KEY (
			MEM_ID
		)
		REFERENCES MEMBER (
			MEM_ID
		);

ALTER TABLE ATTACHMENT
	ADD
		CONSTRAINT FK_BOARD_TO_ATTACHMENT
		FOREIGN KEY (
			BOARD_SQ
		)
		REFERENCES BOARD (
			BOARD_SQ
		);

ALTER TABLE PLAN_USE
	ADD
		CONSTRAINT FK_MEMBER_TO_PLAN_USE
		FOREIGN KEY (
			MEM_ID
		)
		REFERENCES MEMBER (
			MEM_ID
		);

ALTER TABLE PLAN_USE
	ADD
		CONSTRAINT FK_PLAN_TO_PLAN_USE
		FOREIGN KEY (
			PLAN_SQ
		)
		REFERENCES PLAN (
			PLAN_SQ
		);

ALTER TABLE INTERVIEW
	ADD
		CONSTRAINT FK_MEMBER_TO_INTERVIEW
		FOREIGN KEY (
			MEM_ID
		)
		REFERENCES MEMBER (
			MEM_ID
		);

ALTER TABLE QUESTION
	ADD
		CONSTRAINT FK_INTERVIEW_TO_QUESTION
		FOREIGN KEY (
			INTERVIEW_SQ
		)
		REFERENCES INTERVIEW (
			INTERVIEW_SQ
		);

ALTER TABLE QUESTION
	ADD
		CONSTRAINT FK_SAMPLE_QUESTION_TO_QUESTION
		FOREIGN KEY (
			SAMP_QUEST_SQ
		)
		REFERENCES SAMPLE_QUESTION (
			SAMP_QUEST_SQ
		);

ALTER TABLE ANSWER
	ADD
		CONSTRAINT FK_QUESTION_TO_ANSWER
		FOREIGN KEY (
			QUEST_SQ
		)
		REFERENCES QUESTION (
			QUEST_SQ
		);

ALTER TABLE SAMPLE_QUESTION
	ADD
		CONSTRAINT FK_QSTN_GB_TO_SAMPLE_QSTN
		FOREIGN KEY (
			QUEST_GB_SQ
		)
		REFERENCES QUESTION_GB (
			QUEST_GB_SQ
		);

ALTER TABLE VOICE_ANALYSIS
	ADD
		CONSTRAINT FK_ANSWER_TO_VOICE_ANALYSIS
		FOREIGN KEY (
			ANS_SQ
		)
		REFERENCES ANSWER (
			ANS_SQ
		);

ALTER TABLE HABIT_ANALYSIS
	ADD
		CONSTRAINT FK_HABIT_TO_HABIT_ANALYSIS
		FOREIGN KEY (
			HABIT_SQ
		)
		REFERENCES HABIT (
			HABIT_SQ
		);

ALTER TABLE HABIT_ANALYSIS
	ADD
		CONSTRAINT FK_ANSWER_TO_HABIT_ANALYSIS
		FOREIGN KEY (
			ANS_SQ
		)
		REFERENCES ANSWER (
			ANS_SQ
		);

ALTER TABLE REPEAT_ANALYSIS
	ADD
		CONSTRAINT FK_ANSWER_TO_REPEAT_ANALYSIS
		FOREIGN KEY (
			ANS_SQ
		)
		REFERENCES ANSWER (
			ANS_SQ
		);

ALTER TABLE KEYWORD_MATCHING
	ADD
		CONSTRAINT FK_TALENT_TO_KEYWORD_MATCHING
		FOREIGN KEY (
			TALENT_SQ
		)
		REFERENCES TALENT (
			TALENT_SQ
		);

ALTER TABLE KEYWORD_MATCHING
	ADD
		CONSTRAINT FK_KEYWORD_TO_KEYWORD_MATCHING
		FOREIGN KEY (
			KEYWORD_SQ
		)
		REFERENCES KEYWORD (
			KEYWORD_SQ
		);

ALTER TABLE IMAGE_ANALYSIS
	ADD
		CONSTRAINT FK_ANSWER_TO_IMAGE_ANALYSIS
		FOREIGN KEY (
			ANS_SQ
		)
		REFERENCES ANSWER (
			ANS_SQ
		);

ALTER TABLE KEYWORD_ANALYSIS
	ADD
		CONSTRAINT FK_ANSWER_TO_KEYWORD_ANALYSIS
		FOREIGN KEY (
			ANS_SQ
		)
		REFERENCES ANSWER (
			ANS_SQ
		);

ALTER TABLE KEYWORD_ANALYSIS
	ADD
		CONSTRAINT KEYWORD_MATCH_KEYWORD_ANALYSIS
		FOREIGN KEY (
			TALENT_SQ,
			KEYWORD_SQ
		)
		REFERENCES KEYWORD_MATCHING (
			TALENT_SQ,
			KEYWORD_SQ
		);

ALTER TABLE MESSAGE
	ADD
		CONSTRAINT FK_MEMBER_TO_MESSAGE
		FOREIGN KEY (
			MSG_SENDER
		)
		REFERENCES MEMBER (
			MEM_ID
		);

ALTER TABLE MESSAGE
	ADD
		CONSTRAINT FK_MEMBER_TO_MESSAGE2
		FOREIGN KEY (
			MSG_RECEIVER
		)
		REFERENCES MEMBER (
			MEM_ID
		);

		
-- 시퀀스 삭제
DROP SEQUENCE CATEGORY_SQ;
DROP SEQUENCE BOARD_GB_SQ;
DROP SEQUENCE BOARD_SQ;
DROP SEQUENCE ATTACHMENT_SQ;
DROP SEQUENCE SCRIPT_GB_SQ;
DROP SEQUENCE SCRIPT_SQ;
DROP SEQUENCE SCRIPT_TEST_SQ;
DROP SEQUENCE SPEACH_TEST_SQ;
DROP SEQUENCE SPEECH_TEST_SQ;
DROP SEQUENCE SPEACH_TEST_SQ;
DROP SEQUENCE REPLY_SQ;
DROP SEQUENCE MESSAGE_SQ;
DROP SEQUENCE MEMBER_SQ;
DROP SEQUENCE PLAN_SQ;
DROP SEQUENCE PLAN_USE_SQ;
DROP SEQUENCE INTERVIEW_SQ;
DROP SEQUENCE QUESTION_SQ;
DROP SEQUENCE ANSWER_SQ;
DROP SEQUENCE QUESTION_GB_SQ;
DROP SEQUENCE SAMPLE_QUESTION_SQ;
DROP SEQUENCE VOICE_ANALYSIS_SQ;
DROP SEQUENCE REPEAT_ANALYSIS_SQ;
DROP SEQUENCE REPET_ANALYSIS_SQ;-- 기존 시퀀스 삭제용
DROP SEQUENCE IMAGE_ANALYSIS_SQ;
DROP SEQUENCE TALENT_SQ;
DROP SEQUENCE KEYWORD_SQ;
DROP SEQUENCE HABIT_SQ;


-- CATEGORY
CREATE SEQUENCE  CATEGORY_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- BOARD_GB
CREATE SEQUENCE  BOARD_GB_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- BOARD
CREATE SEQUENCE  BOARD_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- ATTACHMENT
CREATE SEQUENCE  ATTACHMENT_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;

-- SCRIPT_GB
CREATE SEQUENCE  SCRIPT_GB_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;

-- SCRIPT
CREATE SEQUENCE  SCRIPT_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- SCRIPT_TEST
CREATE SEQUENCE  SCRIPT_TEST_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- SPEECH_TEST
CREATE SEQUENCE  SPEECH_TEST_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- REPLY
CREATE SEQUENCE  REPLY_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- MESSAGE
CREATE SEQUENCE MESSAGE_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- MEMBER
CREATE SEQUENCE MEMBER_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- PLAN
CREATE SEQUENCE PLAN_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- PLAN_USE
CREATE SEQUENCE PLAN_USE_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- INTERVIEW
CREATE SEQUENCE INTERVIEW_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- QUESTION
CREATE SEQUENCE QUESTION_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- ANSWER
CREATE SEQUENCE ANSWER_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- QUESTION_GB
CREATE SEQUENCE QUESTION_GB_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- SAMPLE_QUESTION
CREATE SEQUENCE SAMPLE_QUESTION_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- VOICE_ANALYSIS
CREATE SEQUENCE VOICE_ANALYSIS_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- REPEAT_ANALYSIS
CREATE SEQUENCE REPEAT_ANALYSIS_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- IMAGE ANALYSIS
CREATE SEQUENCE IMAGE_ANALYSIS_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- TALENT
CREATE SEQUENCE TALENT_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- KEYWORD
CREATE SEQUENCE KEYWORD_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;
    
-- HABIT
CREATE SEQUENCE HABIT_SQ
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1
    CACHE 20
    NOORDER
    NOCYCLE ;